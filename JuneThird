package JuneLong;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

public class Third {

	public static void main(String[] args) {

		FastReader sc = new FastReader();
		int q = sc.nextInt();
		while (q-- > 0) {
			Stack<Integer> five = new Stack<Integer>();
			Stack<Integer> ten = new Stack<Integer>();
			int n = sc.nextInt();
			boolean status = true;
			while (n-- > 0) {
				int k = sc.nextInt();
				if (k == 5) {
					five.push(1);
				} else if (k == 10) {
					if (five.isEmpty()) {
						status = false;
						continue;
					} else {
						ten.push(1);
						five.pop();
					}
				} else if (k == 15) {
					if (ten.isEmpty()) {
						if (five.size() < 2) {
							status = false;
							continue;
						} else {
							five.pop();
							five.pop();
						}
					} else
						ten.pop();
				}
			}
			if (status)
				System.out.println("YES");
			else
				System.out.println("NO");
		}

	}

	public static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
			st = null;
		}

		public String next() {
			if (st == null || !st.hasMoreTokens()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {
			return Long.parseLong(next());
		}
	}

}
